import {
  Group,
  useContextBridge
} from "./chunk-K453C5CD.js";
import "./chunk-RUJBZ25F.js";
import {
  require_client
} from "./chunk-D2CGRZBE.js";
import "./chunk-JGXOATJR.js";
import "./chunk-6C7QWFQ7.js";
import {
  require_react
} from "./chunk-DRWLMN53.js";
import {
  __commonJS,
  __toESM
} from "./chunk-G3PMV62Z.js";

// node_modules/use-image/index.js
var require_use_image = __commonJS({
  "node_modules/use-image/index.js"(exports, module) {
    var React3 = require_react();
    module.exports = function useImage(url, crossOrigin, referrerpolicy) {
      const statusRef = React3.useRef("loading");
      const imageRef = React3.useRef();
      const [_, setStateToken] = React3.useState(0);
      const oldUrl = React3.useRef();
      const oldCrossOrigin = React3.useRef();
      const oldReferrerPolicy = React3.useRef();
      if (oldUrl.current !== url || oldCrossOrigin.current !== crossOrigin || oldReferrerPolicy.current !== referrerpolicy) {
        statusRef.current = "loading";
        imageRef.current = void 0;
        oldUrl.current = url;
        oldCrossOrigin.current = crossOrigin;
        oldReferrerPolicy.current = referrerpolicy;
      }
      React3.useLayoutEffect(
        function() {
          if (!url) return;
          var img = document.createElement("img");
          function onload() {
            statusRef.current = "loaded";
            imageRef.current = img;
            setStateToken(Math.random());
          }
          function onerror() {
            statusRef.current = "failed";
            imageRef.current = void 0;
            setStateToken(Math.random());
          }
          img.addEventListener("load", onload);
          img.addEventListener("error", onerror);
          crossOrigin && (img.crossOrigin = crossOrigin);
          referrerpolicy && (img.referrerPolicy = referrerpolicy);
          img.src = url;
          return function cleanup() {
            img.removeEventListener("load", onload);
            img.removeEventListener("error", onerror);
          };
        },
        [url, crossOrigin, referrerpolicy]
      );
      return [imageRef.current, statusRef.current];
    };
  }
});

// node_modules/react-konva-utils/es/html.js
var import_react = __toESM(require_react());
var import_client = __toESM(require_client());
var __rest = function(s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
    t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var needForceStyle = (el) => {
  const pos = window.getComputedStyle(el).position;
  const ok = pos === "absolute" || pos === "relative";
  return !ok;
};
function useEvent(fn = () => {
}) {
  const ref = import_react.default.useRef(fn);
  ref.current = fn;
  return import_react.default.useCallback((...args) => {
    return ref.current.apply(null, args);
  }, []);
}
var Html = ({ children, groupProps, divProps, transform, transformFunc }) => {
  const Bridge = useContextBridge();
  const groupRef = import_react.default.useRef(null);
  const [div] = import_react.default.useState(() => document.createElement("div"));
  const root = import_react.default.useMemo(() => import_client.default.createRoot(div), [div]);
  const shouldTransform = transform !== null && transform !== void 0 ? transform : true;
  const handleTransform = useEvent(() => {
    if (shouldTransform && groupRef.current) {
      const tr = groupRef.current.getAbsoluteTransform();
      let attrs = tr.decompose();
      if (transformFunc) {
        attrs = transformFunc(attrs);
      }
      div.style.position = "absolute";
      div.style.zIndex = "10";
      div.style.top = "0px";
      div.style.left = "0px";
      div.style.transform = `translate(${attrs.x}px, ${attrs.y}px) rotate(${attrs.rotation}deg) scaleX(${attrs.scaleX}) scaleY(${attrs.scaleY})`;
      div.style.transformOrigin = "top left";
    } else {
      div.style.position = "";
      div.style.zIndex = "";
      div.style.top = "";
      div.style.left = "";
      div.style.transform = ``;
      div.style.transformOrigin = "";
    }
    const _a = divProps || {}, { style } = _a, restProps = __rest(_a, ["style"]);
    Object.assign(div.style, style);
    Object.assign(div, restProps);
  });
  import_react.default.useLayoutEffect(() => {
    var _a;
    const group = groupRef.current;
    if (!group) {
      return;
    }
    const parent = (_a = group.getStage()) === null || _a === void 0 ? void 0 : _a.container();
    if (!parent) {
      return;
    }
    parent.appendChild(div);
    if (shouldTransform && needForceStyle(parent)) {
      parent.style.position = "relative";
    }
    group.on("absoluteTransformChange", handleTransform);
    handleTransform();
    return () => {
      var _a2;
      group.off("absoluteTransformChange", handleTransform);
      (_a2 = div.parentNode) === null || _a2 === void 0 ? void 0 : _a2.removeChild(div);
    };
  }, [shouldTransform]);
  import_react.default.useLayoutEffect(() => {
    handleTransform();
  }, [divProps, transformFunc]);
  import_react.default.useLayoutEffect(() => {
    root.render(import_react.default.createElement(Bridge, null, children));
  });
  import_react.default.useLayoutEffect(() => {
    return () => {
      setTimeout(() => {
        root.unmount();
      });
    };
  }, []);
  return import_react.default.createElement(Group, Object.assign({ ref: groupRef }, groupProps));
};

// node_modules/react-konva-utils/es/portal.js
var import_react2 = __toESM(require_react());
var Portal = ({ selector, enabled, children }) => {
  const outer = import_react2.default.useRef(null);
  const inner = import_react2.default.useRef(null);
  const safeRef = import_react2.default.useRef(null);
  const shouldMove = enabled !== null && enabled !== void 0 ? enabled : true;
  import_react2.default.useLayoutEffect(() => {
    if (!outer.current || !inner.current) {
      return;
    }
    safeRef.current = inner.current;
    const stage = outer.current.getStage();
    const newContainer = stage.findOne(selector);
    if (shouldMove && newContainer) {
      inner.current.moveTo(newContainer);
    } else {
      inner.current.moveTo(outer.current);
    }
    const outerLayer = outer.current.getLayer();
    if (!outerLayer)
      return;
    outerLayer.batchDraw();
    if (newContainer) {
      const newContainerLayer = newContainer.getLayer();
      if (!newContainerLayer)
        return;
      newContainerLayer.batchDraw();
    }
  }, [selector, shouldMove]);
  import_react2.default.useEffect(() => {
    return () => {
      var _a;
      (_a = safeRef.current) === null || _a === void 0 ? void 0 : _a.destroy();
    };
  }, []);
  return import_react2.default.createElement(
    Group,
    { name: "_outer_portal", ref: outer },
    import_react2.default.createElement(Group, { name: "_inner_portal", ref: inner }, children)
  );
};

// node_modules/react-konva-utils/es/use-image.js
var import_use_image = __toESM(require_use_image());
var export_useImage = import_use_image.default;
export {
  Html,
  Portal,
  useEvent,
  export_useImage as useImage
};
//# sourceMappingURL=react-konva-utils.js.map
